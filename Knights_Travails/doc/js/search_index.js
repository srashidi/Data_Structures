var search_data = {"index":{"searchIndex":["gameboard","knight","object","knight_moves()","new()","new()","next_possible_moves()","position_check()"],"longSearchIndex":["gameboard","knight","object","object#knight_moves()","gameboard::new()","knight::new()","knight#next_possible_moves()","knight#position_check()"],"info":[["GameBoard","","GameBoard.html","",""],["Knight","","Knight.html","",""],["Object","","Object.html","",""],["knight_moves","Object","Object.html#method-i-knight_moves","(starting_position,ending_position)","<p>Given starting and ending positions, ascertains fewest moves needed to go\nfrom start to end and returns …\n"],["new","GameBoard","GameBoard.html#method-c-new","()","<p>Creates a new 8x8 gameboard, starting at [0,0], [0,1], [0,2]… all the way\nup to …[7,5], [7,6], [7,7] …\n"],["new","Knight","Knight.html#method-c-new","(starting_position)","<p>Creates a knight instance on a gameboard with a given starting position\n"],["next_possible_moves","Knight","Knight.html#method-i-next_possible_moves","()","<p>Determines all next possible moves from current position\n"],["position_check","Knight","Knight.html#method-i-position_check","(position)","<p>Checks a position to make sure it is on the gameboard\n"]]}}